{"version":3,"sources":["components/VisitDetailsForm/VisitDetailsInput/VisitDetailsInput.js","components/App/constants/routes.js","components/App/constants/localStorage.js","components/Fab/Fab.js","components/VisitDetailsForm/VisitDetailsForm.js","function/delay.js","contexts/DoctorsContext.js","hooks/useDoctorsData.js","components/DoctorForm/DoctorForm.js","components/SummaryCards/Card/Card.js","contexts/VisitsContext.js","hooks/useVisitsByAllDoctors.js","components/SummaryCards/SummaryCards.js","hooks/useVisit.js","hooks/useDoctorData.js","components/NotFoundPage/NotFoundPage.js","components/Doctors/DoctorItem/DoctorItem.js","components/Doctors/Doctors.js","components/LoadingWrapper/LoadingWrapper.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["VisitDetailsInput","autoFocus","name","placeholder","value","onChange","type","handleChange","useCallback","e","target","className","required","AppRoutes","DOCTORS","DOCTOR","DOCTOR_FORM","DOCTOR_VISIT_FORM","LocalStorage","Fab","children","color","VisitDetailsForm","id","useParams","navigate","useNavigate","useState","setValue","text","currentValue","handleSubmit","React","preventDefault","detailsStr","localStorage","getItem","details","JSON","parse","doctorDetails","arrId","map","detail","maxId","length","Math","max","newDetail","result","setItem","stringify","replace","onSubmit","receiptDate","doctorName","addressClinic","clinicName","analyzes","diagnosis","treatment","to","delay","fn","ms","Promise","resolve","reject","setTimeout","DoctorsContext","createContext","useDoctorsContext","context","useContext","undefined","Error","DoctorsContextProvider","doctorsData","loading","setLoading","doctors","setDoctors","getDoctors","doctorsStr","updateDoctor","doctor","otherDoctors","filter","d","reduce","acc","deleteDoctor","useEffect","a","window","addEventListener","removeEventListener","useMemo","useDoctorsData","Provider","DoctorForm","message","setMessage","some","toLowerCase","trim","validateDoctorForm","Card","visit","onDelete","onClick","stopPropagation","VisitsContext","useVisitsContext","VisitsContextProvider","visitsData","visitsByAllDoctors","setVisitsByAllDoctors","getVisitsByAllDoctors","visitsStr","updateVisitsByAllDoctors","visits","DETAILS","useVisitsByAllDoctors","SummaryCards","doctorVisits","useVisitsByDoctor","find","useDoctorData","onDeleteHandle","console","log","toUpperCase","NotFoundPage","style","padding","DoctorItem","Doctors","onClickHandle","LoadingWrapper","visitLoading","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85da296b.chunk.js","sourcesContent":["import React, {useCallback} from \"react\";\r\n\r\nexport function VisitDetailsInput({ autoFocus, name, placeholder, value = '', onChange, type}) {\r\n    const handleChange = useCallback((e) => onChange(name, e.target.value), [onChange, name]);\r\n    return (\r\n        <input\r\n            value={value}\r\n            onChange={handleChange}\r\n            name={name}\r\n            className='visitDetailsForm__input'\r\n            placeholder={placeholder}\r\n            type={type}\r\n            required\r\n            autoFocus={autoFocus}\r\n        />\r\n    )\r\n}\r\n\r\n","const DOCTORS = '/doctors'\r\nconst DOCTOR = '/doctor/:id'\r\nconst DOCTOR_FORM = '/doctor/form'\r\nconst DOCTOR_VISIT_FORM = '/doctor/:id/visit-form'\r\n\r\nexport const AppRoutes = {\r\n    DOCTORS,\r\n    DOCTOR,\r\n    DOCTOR_FORM,\r\n    DOCTOR_VISIT_FORM,\r\n}\r\n\r\n","const DOCTORS = \"doctors\";\r\nconst DETAILS = 'details'// большими буквами пишутся константы - неизменяемые значения\r\nexport const LocalStorage = {\r\n    DOCTORS,\r\n    DETAILS,\r\n}\r\n","import React from \"react\";\r\nimport './Fab.css'\r\n\r\n\r\nexport default function Fab({className, children}){\r\n\r\n    return (\r\n        <button color=\"primary\" aria-label=\"add\" className={`fab ${className || ''}`}>\r\n            {children}\r\n        </button>\r\n\r\n    )\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {VisitDetailsInput} from \"./VisitDetailsInput/VisitDetailsInput\";\r\nimport './VisitDetailsForm.css';\r\nimport {useNavigate, useParams, Link} from \"react-router-dom\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport {LocalStorage} from \"../App/constants/localStorage\";\r\nimport Fab from \"../Fab/Fab\";\r\n\r\nexport default function VisitDetailsForm() {\r\n    const {id} = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [value, setValue] = useState({});\r\n    const handleChange = useCallback((name, text) => {\r\n        setValue(currentValue => ({...currentValue, [name]: text}));\r\n    }, [setValue]);\r\n\r\n    const handleSubmit = React.useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        const detailsStr = localStorage.getItem(LocalStorage.DETAILS);\r\n        const details = JSON.parse(detailsStr) || {};\r\n        const doctorDetails = details[id] || [];\r\n        const arrId = doctorDetails.map(detail => detail.id);\r\n        const maxId = arrId.length === 0 ? -1 : Math.max(...arrId);\r\n        const newDetail = {id: maxId + 1, ...value};\r\n        const result = {...details, [id]: [...doctorDetails, newDetail]};\r\n\r\n\r\n        localStorage.setItem(LocalStorage.DETAILS, JSON.stringify(result));\r\n        navigate(AppRoutes.DOCTOR.replace(':id', id));\r\n\r\n\r\n    }, [navigate, value, id])\r\n\r\n    return (\r\n        <div className=\"visitDetailsForm\">\r\n            <form className='visitDetailsForm__form' onSubmit={handleSubmit}>\r\n                <VisitDetailsInput\r\n                    name={'receiptDate'}\r\n                    value={value.receiptDate}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите дату приема'}\r\n                    type={'date'}\r\n                    autoFocus={true}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'doctorName'}\r\n                    value={value.doctorName}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите ФИО врача'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'addressClinic'}\r\n                    value={value.addressClinic}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите адрес клиники'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'clinicName'}\r\n                    value={value.clinicName}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите наименование клиники'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'analyzes'}\r\n                    value={value.analyzes}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите анализы'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'diagnosis'}\r\n                    value={value.diagnosis}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите диагноз'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'treatment'}\r\n                    value={value.treatment}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите лечение'}\r\n                />\r\n                <br/>\r\n                <button className='visitDetailsForm__saveButton' type=\"submit\">\r\n                    Сохранить\r\n                </button>\r\n            </form>\r\n\r\n            <Link to={AppRoutes.DOCTOR.replace(':id', id)}>\r\n                <Fab className='visitDetailsForm__backButton'>\r\n                    🠔\r\n                </Fab>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport default function delay(fn, ms) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            try {\r\n                const result = fn();\r\n                resolve(result);\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }, ms);\r\n    })\r\n}","import React, {useContext} from \"react\";\r\nimport useDoctorsData from \"../hooks/useDoctorsData\";\r\n\r\nconst DoctorsContext = React.createContext({});\r\n\r\nexport function useDoctorsContext() {\r\n    const context = useContext(DoctorsContext);\r\n    if (context === undefined) {\r\n        throw new Error('Ошибка')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function DoctorsContextProvider({children}) {\r\n    const doctorsData = useDoctorsData();\r\n\r\n    return (\r\n        <DoctorsContext.Provider value={doctorsData}>\r\n            {children}\r\n        </DoctorsContext.Provider>\r\n    )\r\n}","import React, {useCallback} from \"react\";\r\nimport {LocalStorage} from \"../components/App/constants/localStorage\";\r\nimport delay from \"../function/delay\";\r\n\r\n\r\nexport default function useDoctorsData() {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [doctors, setDoctors] = React.useState([]);\r\n\r\n    const getDoctors = React.useCallback(() => {\r\n        const doctorsStr = localStorage.getItem(LocalStorage.DOCTORS);\r\n        try {\r\n            setDoctors(JSON.parse(doctorsStr) || []);\r\n        } catch (e) {\r\n            setDoctors([]);\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const updateDoctor = useCallback(doctor => {\r\n        setDoctors(doctors => {\r\n            const otherDoctors = doctors.filter(d => d.id !== doctor.id);\r\n            if (otherDoctors.length === doctors.length) {\r\n                const maxId = otherDoctors.reduce((acc, d) => acc > d.id ? acc : d.id, 0);\r\n                doctor.id = maxId + 1;\r\n            }\r\n            const result = [...otherDoctors, doctor];\r\n            localStorage.setItem(LocalStorage.DOCTORS, JSON.stringify(result));\r\n            return result;\r\n        });\r\n    }, []);\r\n\r\n    const deleteDoctor = React.useCallback(id => {\r\n\r\n        setDoctors(doctors => {\r\n            const result = doctors.filter(d => d.id !== id);\r\n            localStorage.setItem(LocalStorage.DOCTORS, JSON.stringify(result));\r\n            return result;\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const fn = async () => {\r\n            await delay(getDoctors, 1000);\r\n            window.addEventListener('storage', getDoctors)\r\n        }\r\n        fn();\r\n        return () => {\r\n            window.removeEventListener('storage', getDoctors)\r\n        }\r\n    }, [getDoctors])\r\n\r\n    return React.useMemo(\r\n        () => ({\r\n            doctors,\r\n            loading,\r\n            updateDoctor,\r\n            deleteDoctor,\r\n            setDoctors\r\n        }),\r\n        [doctors, loading, updateDoctor, deleteDoctor]\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport './DoctorForm.css';\r\nimport Fab from \"../Fab/Fab\";\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\n\r\n\r\nfunction validateDoctorForm(value, doctors) {\r\n    if (!value) {\r\n        return '*Обязательное поле';\r\n    }\r\n    const isDuplicate = doctors.some(doctor => doctor.value.toLowerCase() === value.toLowerCase());\r\n    if(isDuplicate){\r\n        return '*Ошибка! Такой врач уже существует';\r\n    }\r\n    const checkSpace = value.trim();\r\n    if(checkSpace === ''){\r\n        return '*Недопустимое название врача';\r\n    }\r\n    return '';\r\n}\r\n\r\nexport default function DoctorForm() {\r\n    const { doctors, updateDoctor } =useDoctorsContext();\r\n    const navigate = useNavigate();\r\n    const [message, setMessage] = React.useState('');\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = React.useCallback((e) => {\r\n        setValue(e.target.value);\r\n        setMessage('');\r\n    }, []);\r\n    const handleSubmit = React.useCallback((e) => {\r\n        // todo move to hook\r\n        e.preventDefault();\r\n        const message = validateDoctorForm(value, doctors);\r\n        if (message) {\r\n            setMessage(message);\r\n            return;\r\n        }\r\n        updateDoctor({ value });\r\n        navigate(AppRoutes.DOCTORS);\r\n        }, [value, navigate, updateDoctor, doctors]);\r\n    return (\r\n        <div className=\"doctorForm\">\r\n            <form className='doctorForm__form' onSubmit={handleSubmit}>\r\n                <input\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className='doctorForm__input'\r\n                    placeholder=\"Введите врача\"\r\n                    name=\"doctorName\"\r\n                />\r\n                <div className='doctorForm__message'>\r\n                    {message}\r\n                </div>\r\n                <button className='doctorForm__saveButton' type=\"submit\">\r\n                    Сохранить\r\n                </button>\r\n                <div className='doctorForm__back'>\r\n                    <Link to={AppRoutes.DOCTORS}>\r\n                        <Fab color=\"primary\" aria-label=\"add\" className='back__fab'>\r\n                            🠔\r\n                        </Fab>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import './Card.css';\r\nimport React from \"react\";\r\n\r\n/**\r\n * плашка с 1 посещением\r\n */\r\nexport default function Card({visit, onDelete}) {\r\n    const {\r\n        receiptDate,\r\n        doctorName,\r\n        clinicName,\r\n        analyzes,\r\n        diagnosis,\r\n        treatment,\r\n        addressClinic,\r\n    } = visit;\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"card__value\">\r\n                <h4> Дата приёма:</h4>\r\n                <p>{receiptDate}</p>\r\n                <h4> ФИО врача:</h4>\r\n                <p>{doctorName}</p>\r\n                <h4> Адрес клиники:</h4>\r\n                <p> {addressClinic}</p>\r\n                <h4> Наименование клиники:</h4>\r\n                <p>{clinicName}</p>\r\n                <h4> Анализы:</h4>\r\n                <p>{analyzes}</p>\r\n                <h4> Диагноз:</h4>\r\n                <p>{diagnosis}</p>\r\n                <h4> Лечение:</h4>\r\n                <p>{treatment}</p>\r\n            </div>\r\n\r\n            <div\r\n                className='card__delete'\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDelete(visit.id)\r\n                }}\r\n            >\r\n                🗑\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useContext} from \"react\";\r\nimport useVisitsByAllDoctors from \"../hooks/useVisitsByAllDoctors\";\r\n\r\nconst VisitsContext = React.createContext({});\r\n\r\nexport function useVisitsContext() {\r\n    const context = useContext(VisitsContext);\r\n    if (context === undefined) {\r\n        throw new Error('Ошибка')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function VisitsContextProvider({children}) {\r\n    const visitsData = useVisitsByAllDoctors();\r\n    return (\r\n        <VisitsContext.Provider value={visitsData}>\r\n            {children}\r\n        </VisitsContext.Provider>\r\n    )\r\n}","import React from \"react\";\r\nimport delay from \"../function/delay\";\r\nimport {LocalStorage} from \"../components/App/constants/localStorage\";\r\n\r\n\r\nexport default function useVisitsByAllDoctors() {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [visitsByAllDoctors, setVisitsByAllDoctors] = React.useState({});\r\n\r\n    const getVisitsByAllDoctors = React.useCallback(() => {\r\n        const visitsStr = localStorage.getItem(LocalStorage.DETAILS);\r\n        try {\r\n            setVisitsByAllDoctors(JSON.parse(visitsStr) || {});\r\n        } catch (e) {\r\n            setVisitsByAllDoctors({});\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const updateVisitsByAllDoctors = React.useCallback(visits => {\r\n        setVisitsByAllDoctors(visits);\r\n        localStorage.setItem(localStorage.DETAILS, JSON.stringify(visits));\r\n    }, []);\r\n\r\n    React.useEffect( () => {\r\n        const fn = async () => {\r\n            await delay(getVisitsByAllDoctors, 1000)\r\n            window.addEventListener('storage', getVisitsByAllDoctors)\r\n        }\r\n        fn();\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', getVisitsByAllDoctors)\r\n        }\r\n    }, [getVisitsByAllDoctors]);\r\n\r\n    return React.useMemo(\r\n        () => ({\r\n            visitsByAllDoctors,\r\n            loading,\r\n            updateVisitsByAllDoctors,\r\n        }),\r\n        [visitsByAllDoctors, loading, updateVisitsByAllDoctors]\r\n    );\r\n}\r\n\r\n","import './SummaryCards.css';\r\nimport React from \"react\";\r\nimport Fab from \"../Fab/Fab\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Card} from \"./Card\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport {useDoctorData} from \"../../hooks/useDoctorData\";\r\nimport {useVisitsByDoctor} from \"../../hooks/useVisit\";\r\n\r\nexport default function SummaryCards() {\r\n    const { id } = useParams();\r\n    const doctorVisits = useVisitsByDoctor(id);\r\n    const doctor = useDoctorData();\r\n    //todo implement\r\n    const onDeleteHandle = React.useCallback(() => console.log('deleted!'), []);\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className= 'SummaryCards'>\r\n                <div className= 'SummaryCards__header'>\r\n                    {doctor?.value.toUpperCase()}\r\n                </div>\r\n                <div className= 'SummaryCards__cards'>\r\n                    {doctorVisits.map(visit => (\r\n                        <Card\r\n                            key={visit.id}\r\n                            visit={visit}\r\n                            onDelete={onDeleteHandle}\r\n                        />\r\n                    ))}\r\n\r\n                </div>\r\n                <div className= 'SummaryCards__fab'>\r\n\r\n                    <Link to={AppRoutes.DOCTORS}>\r\n                        <Fab color=\"primary\" aria-label=\"add\" className='fab__back'>\r\n                            🠔\r\n                        </Fab>\r\n                    </Link>\r\n                    <Link to={AppRoutes.DOCTOR_VISIT_FORM.replace(':id', doctor.id)} className='fab__add'>\r\n                        <Fab color=\"primary\" aria-label=\"add\">\r\n                            +\r\n                        </Fab>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useVisitsContext} from \"../contexts/VisitsContext\";\r\nimport {useMemo} from \"react\";\r\n\r\n\r\nexport function useVisitsByDoctor(id) {\r\n    const { visitsByAllDoctors } = useVisitsContext();\r\n    return useMemo(() => visitsByAllDoctors[id] || [], [id, visitsByAllDoctors]);\r\n}","import {useMemo} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDoctorsContext} from \"../contexts/DoctorsContext\";\r\n\r\nexport function useDoctorData() {\r\n    const { id } = useParams();\r\n    const {doctors} = useDoctorsContext();\r\n    return useMemo(() => doctors.find(d => d.id === +id), [id, doctors]);\r\n}\r\n","import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\n\r\n/**\r\n * как перейти на эту страницу?\r\n * при указани несуществующего адреса сначала появилась welcomePage на пару секунд, а следом основная с докторами\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function NotFoundPage() {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate(AppRoutes.DOCTORS)\r\n    }, [navigate])\r\n    return (\r\n        <main style={{ padding: \"1rem\" }}>\r\n            <p>There's nothing here!</p>\r\n        </main>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './DoctorItem.css';\r\n\r\n/**\r\n * плашка с 1 врачем\r\n */\r\nexport default function DoctorItem({doctor, onClick, onDelete}) {\r\n    return (\r\n        <div className='wrapper'>\r\n            <div\r\n                className='doctorItem'\r\n                onClick={() => onClick(doctor.id)}\r\n            >\r\n                <div className='doctorItem__value'>\r\n                    {doctor.value}\r\n                </div>\r\n                <div\r\n                    className='doctorItem__delete'\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        onDelete(doctor.id);\r\n                    }}\r\n                >\r\n                    🗑\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {Link, useNavigate} from \"react-router-dom\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport Fab from \"../Fab/Fab\";\r\nimport React from \"react\";\r\nimport {DoctorItem} from \"./DoctorItem\";\r\nimport './Doctors.css'\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\n\r\nexport default function Doctors() {\r\n    const {doctors, deleteDoctor} = useDoctorsContext();\r\n    const navigate = useNavigate();\r\n    const onClickHandle = React.useCallback((id) =>\r\n            navigate(AppRoutes.DOCTOR.replace(':id', id)),\r\n        [navigate]\r\n    );\r\n\r\n    return (\r\n        <div className=\"Doctors\">\r\n            <div className=\"Doctors__wrapper\">\r\n                {!doctors.length && (\r\n                    <div className=\"Doctors__welcome\"> Добрый день! <br/> Вам необходимо добавить врачей</div>\r\n                )}\r\n                <div className='Doctors__list'>\r\n                    {doctors.map(doctor => (\r\n                        <DoctorItem\r\n                            key={doctor.value}\r\n                            onClick={onClickHandle}\r\n                            doctor={doctor}\r\n                            onDelete={deleteDoctor}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className='Doctors__fab'>\r\n                    <Link to={AppRoutes.DOCTOR_FORM}>\r\n                        <Fab color=\"primary\" aria-label=\"add\">\r\n                            +\r\n                        </Fab>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\nimport {useVisitsContext} from \"../../contexts/VisitsContext\";\r\nimport './LoadingWrapper.css'\r\n\r\n\r\nfunction LoadingWrapper({children}) {\r\n    const { loading: visitLoading } = useVisitsContext();\r\n    const { loading: doctorsLoading } = useDoctorsContext();\r\n    if (doctorsLoading || visitLoading) {\r\n        return (\r\n            <div className='loading'>\r\n                <div className=\"loading__inside\"/>\r\n            </div>\r\n        )\r\n    }\r\n    return children;\r\n}\r\n\r\nexport default LoadingWrapper;","import React from \"react\";\r\nimport {BrowserRouter, Routes, Route} from \"react-router-dom\";\r\nimport {VisitDetailsForm} from \"../VisitDetailsForm\";\r\nimport {DoctorForm} from \"../DoctorForm\";\r\nimport {AppRoutes} from \"./constants/routes\";\r\nimport {SummaryCards} from \"../SummaryCards\";\r\nimport './App.css';\r\nimport {NotFoundPage} from \"../NotFoundPage\";\r\nimport {Doctors} from \"../Doctors\";\r\nimport {DoctorsContextProvider} from \"../../contexts/DoctorsContext\";\r\nimport {LoadingWrapper} from \"../LoadingWrapper\";\r\nimport {VisitsContextProvider} from \"../../contexts/VisitsContext\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <DoctorsContextProvider>\r\n                    <VisitsContextProvider>\r\n                        <LoadingWrapper>\r\n                            <Routes>\r\n                                <Route path={AppRoutes.DOCTOR_VISIT_FORM} element={<VisitDetailsForm/>}/>\r\n                                {/*<Route path={AppRoutes.LIST_OF_DOCTORS} element={<ListOfDoctors/>}/>*/}\r\n                                {/*<Route path={AppRoutes.SUMMARY_CARDS} element={<SummaryCards/>}/>*/}\r\n\r\n                                <Route path={AppRoutes.DOCTOR} element={<SummaryCards/>}/>\r\n                                <Route path={AppRoutes.DOCTOR_FORM} element={<DoctorForm/>}/>\r\n                                <Route path={AppRoutes.DOCTORS} element={<Doctors/>}/>\r\n                                <Route path=\"*\" element={<NotFoundPage/>}/>\r\n                            </Routes>\r\n                        </LoadingWrapper>\r\n                    </VisitsContextProvider>\r\n                </DoctorsContextProvider>\r\n\r\n            </BrowserRouter>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}