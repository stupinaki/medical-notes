{"version":3,"sources":["components/VisitDetailsForm/VisitDetailsInput/VisitDetailsInput.js","components/App/constants/routes.js","components/App/constants/localStorage.js","components/Fab/Fab.js","function/delay.js","contexts/VisitsContext.js","hooks/useVisitsByAllDoctors.js","components/VisitDetailsForm/VisitDetailsForm.js","contexts/DoctorsContext.js","hooks/useDoctorsData.js","components/DoctorForm/DoctorForm.js","icons/trash-2.svg","components/SummaryCards/Card/Card.js","components/SummaryCards/SummaryCards.js","hooks/useVisit.js","hooks/useDoctorData.js","components/NotFoundPage/NotFoundPage.js","components/Doctors/DoctorItem/DoctorItem.js","components/Doctors/Doctors.js","components/LoadingWrapper/LoadingWrapper.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["VisitDetailsInput","autoFocus","name","placeholder","value","onChange","type","handleChange","useCallback","e","target","className","required","AppRoutes","DOCTORS","DOCTOR","DOCTOR_FORM","DOCTOR_VISIT_FORM","LocalStorage","Fab","children","color","delay","fn","ms","Promise","resolve","reject","setTimeout","result","VisitsContext","React","createContext","useVisitsContext","context","useContext","undefined","Error","VisitsContextProvider","visitsData","useState","loading","setLoading","visitsByAllDoctors","setVisitsByAllDoctors","getVisitsByAllDoctors","visitsStr","localStorage","getItem","JSON","parse","updateVisitsByAllDoctors","visits","setItem","stringify","updateVisitsByOneDoctor","doctorId","deleteVisitsByDoctorId","useEffect","a","window","addEventListener","removeEventListener","useMemo","useVisitsByAllDoctors","Provider","VisitDetailsForm","id","useParams","navigate","useNavigate","setValue","text","currentValue","handleSubmit","preventDefault","detailsStr","details","doctorDetails","arrId","map","detail","maxId","length","Math","max","newDetail","replace","onSubmit","receiptDate","doctorName","addressClinic","clinicName","analyzes","diagnosis","treatment","to","DoctorsContext","useDoctorsContext","DoctorsContextProvider","doctorsData","doctors","setDoctors","getDoctors","doctorsStr","updateDoctor","doctor","otherDoctors","filter","d","reduce","acc","deleteDoctor","newVisits","Object","assign","useDoctorsData","DoctorForm","message","setMessage","some","toLowerCase","trim","validateDoctorForm","_polyline","_path","_line","_line2","_excluded","_extends","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrash2","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","points","x1","y1","x2","y2","ForwardRef","Card","visit","onDelete","onClick","stopPropagation","SummaryCards","doctorVisits","useVisitsByDoctor","find","useDoctorData","onDeleteHandle","visitId","newVisitsByOneDoctor","toUpperCase","NotFoundPage","style","padding","DoctorItem","Doctors","handleDeleteDoctor","onClickHandle","TransitionGroup","component","CSSTransition","timeout","classNames","LoadingWrapper","visitLoading","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00816616.chunk.js","sourcesContent":["import React, {useCallback} from \"react\";\r\n\r\nexport function VisitDetailsInput({ autoFocus, name, placeholder, value = '', onChange, type}) {\r\n    const handleChange = useCallback((e) => onChange(name, e.target.value), [onChange, name]);\r\n    return (\r\n        <input\r\n            value={value}\r\n            onChange={handleChange}\r\n            name={name}\r\n            className='visitDetailsForm__input'\r\n            placeholder={placeholder}\r\n            type={type}\r\n            required\r\n            autoFocus={autoFocus}\r\n        />\r\n    )\r\n}\r\n\r\n","const DOCTORS = '/doctors'\r\nconst DOCTOR = '/doctor/:id'\r\nconst DOCTOR_FORM = '/doctor/form'\r\nconst DOCTOR_VISIT_FORM = '/doctor/:id/visit-form'\r\n\r\nexport const AppRoutes = {\r\n    DOCTORS,\r\n    DOCTOR,\r\n    DOCTOR_FORM,\r\n    DOCTOR_VISIT_FORM,\r\n}\r\n\r\n","const DOCTORS = \"doctors\";\r\nconst DETAILS = 'details'// большими буквами пишутся константы - неизменяемые значения\r\nexport const LocalStorage = {\r\n    DOCTORS,\r\n    DETAILS,\r\n}\r\n","import React from \"react\";\r\nimport './Fab.css'\r\n\r\n\r\nexport default function Fab({className, children}){\r\n\r\n    return (\r\n        <button color=\"primary\" aria-label=\"add\" className={`fab ${className || ''}`}>\r\n            {children}\r\n        </button>\r\n\r\n    )\r\n}","\r\n\r\nexport default function delay(fn, ms) {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            try {\r\n                const result = fn();\r\n                resolve(result);\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        }, ms);\r\n    })\r\n}","import React, {useContext} from \"react\";\r\nimport useVisitsByAllDoctors from \"../hooks/useVisitsByAllDoctors\";\r\n\r\nconst VisitsContext = React.createContext({});\r\n\r\nexport function useVisitsContext() {\r\n    const context = useContext(VisitsContext);\r\n    if (context === undefined) {\r\n        throw new Error('Ошибка')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function VisitsContextProvider({children}) {\r\n    const visitsData = useVisitsByAllDoctors();\r\n    return (\r\n        <VisitsContext.Provider value={visitsData}>\r\n            {children}\r\n        </VisitsContext.Provider>\r\n    )\r\n}","import React, {useCallback} from \"react\";\r\nimport delay from \"../function/delay\";\r\nimport {LocalStorage} from \"../components/App/constants/localStorage\";\r\n\r\n\r\nexport default function useVisitsByAllDoctors() {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [visitsByAllDoctors, setVisitsByAllDoctors] = React.useState({});\r\n    const getVisitsByAllDoctors = React.useCallback(() => {\r\n        const visitsStr = localStorage.getItem(LocalStorage.DETAILS);\r\n        try {\r\n            setVisitsByAllDoctors(JSON.parse(visitsStr) || {});\r\n        } catch (e) {\r\n            setVisitsByAllDoctors({});\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const updateVisitsByAllDoctors = React.useCallback(visits => {\r\n        setVisitsByAllDoctors(visits);\r\n        localStorage.setItem(LocalStorage.DETAILS, JSON.stringify(visits));\r\n    }, []);\r\n\r\n    const updateVisitsByOneDoctor = React.useCallback((doctorId, visits) => {\r\n        updateVisitsByAllDoctors({\r\n            ...visitsByAllDoctors,\r\n            [doctorId]: visits\r\n        });\r\n    }, [visitsByAllDoctors, updateVisitsByAllDoctors]);\r\n\r\n    const deleteVisitsByDoctorId = useCallback((doctorId) => {\r\n        updateVisitsByAllDoctors({ ...visitsByAllDoctors, [doctorId]: [] })\r\n    }, [updateVisitsByAllDoctors, visitsByAllDoctors]);\r\n\r\n    React.useEffect( () => {\r\n        const fn = async () => {\r\n            await delay(getVisitsByAllDoctors, 1000)\r\n            window.addEventListener('storage', getVisitsByAllDoctors)\r\n        }\r\n        fn();\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', getVisitsByAllDoctors)\r\n        }\r\n    }, [getVisitsByAllDoctors]);\r\n\r\n    return React.useMemo(\r\n        () => ({\r\n            visitsByAllDoctors,\r\n            loading,\r\n            deleteVisitsByDoctorId,\r\n            updateVisitsByOneDoctor,\r\n            updateVisitsByAllDoctors,\r\n        }),\r\n        [visitsByAllDoctors, loading, updateVisitsByAllDoctors, updateVisitsByOneDoctor, deleteVisitsByDoctorId]\r\n    );\r\n}\r\n\r\n","import React, {useCallback, useState} from \"react\";\r\nimport {VisitDetailsInput} from \"./VisitDetailsInput/VisitDetailsInput\";\r\nimport './VisitDetailsForm.css';\r\nimport {useNavigate, useParams, Link} from \"react-router-dom\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport {LocalStorage} from \"../App/constants/localStorage\";\r\nimport Fab from \"../Fab/Fab\";\r\nimport {useVisitsContext} from \"../../contexts/VisitsContext\";\r\n\r\nexport default function VisitDetailsForm() {\r\n    const {id} = useParams();\r\n    const {updateVisitsByAllDoctors} = useVisitsContext();\r\n    const navigate = useNavigate();\r\n\r\n    const [value, setValue] = useState({});\r\n    const handleChange = useCallback((name, text) => {\r\n        setValue(currentValue => ({...currentValue, [name]: text}));\r\n    }, [setValue]);\r\n\r\n\r\n    const handleSubmit = React.useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        const detailsStr = localStorage.getItem(LocalStorage.DETAILS);\r\n        const details = JSON.parse(detailsStr) || {};\r\n        const doctorDetails = details[id] || [];\r\n        const arrId = doctorDetails.map(detail => detail.id);\r\n        const maxId = arrId.length === 0 ? -1 : Math.max(...arrId);\r\n        const newDetail = {id: maxId + 1, ...value};\r\n        const result = {...details, [id]: [...doctorDetails, newDetail]};\r\n\r\n        updateVisitsByAllDoctors(result)\r\n        navigate(AppRoutes.DOCTOR.replace(':id', id));\r\n\r\n    }, [navigate, value, id, updateVisitsByAllDoctors])\r\n\r\n\r\n    return (\r\n        <div className=\"visitDetailsForm\">\r\n            <form className='visitDetailsForm__form' onSubmit={handleSubmit}>\r\n                <VisitDetailsInput\r\n                    name={'receiptDate'}\r\n                    value={value.receiptDate}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите дату приема'}\r\n                    type={'date'}\r\n                    autoFocus={true}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'doctorName'}\r\n                    value={value.doctorName}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите ФИО врача'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'addressClinic'}\r\n                    value={value.addressClinic}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите адрес клиники'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'clinicName'}\r\n                    value={value.clinicName}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите наименование клиники'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'analyzes'}\r\n                    value={value.analyzes}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите анализы'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'diagnosis'}\r\n                    value={value.diagnosis}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите диагноз'}\r\n                />\r\n                <br/>\r\n                <VisitDetailsInput\r\n                    name={'treatment'}\r\n                    value={value.treatment}\r\n                    onChange={handleChange}\r\n                    placeholder={'Введите лечение'}\r\n                />\r\n                <br/>\r\n                <button className='visitDetailsForm__saveButton' type=\"submit\">\r\n                    Сохранить\r\n                </button>\r\n            </form>\r\n\r\n            <Link to={AppRoutes.DOCTOR.replace(':id', id)}>\r\n                <Fab className='visitDetailsForm__backButton'>\r\n                    🠔\r\n                </Fab>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from \"react\";\r\nimport useDoctorsData from \"../hooks/useDoctorsData\";\r\n\r\nconst DoctorsContext = React.createContext({});\r\n\r\nexport function useDoctorsContext() {\r\n    const context = useContext(DoctorsContext);\r\n    if (context === undefined) {\r\n        throw new Error('Ошибка')\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function DoctorsContextProvider({children}) {\r\n    const doctorsData = useDoctorsData();\r\n\r\n    return (\r\n        <DoctorsContext.Provider value={doctorsData}>\r\n            {children}\r\n        </DoctorsContext.Provider>\r\n    )\r\n}","import React, {useCallback} from \"react\";\r\nimport {LocalStorage} from \"../components/App/constants/localStorage\";\r\nimport delay from \"../function/delay\";\r\n\r\n\r\nexport default function useDoctorsData() {\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [doctors, setDoctors] = React.useState([]);\r\n\r\n    const getDoctors = React.useCallback(() => {\r\n        const doctorsStr = localStorage.getItem(LocalStorage.DOCTORS);\r\n        try {\r\n            setDoctors(JSON.parse(doctorsStr) || []);\r\n        } catch (e) {\r\n            setDoctors([]);\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const updateDoctor = useCallback(doctor => {\r\n        setDoctors(doctors => {\r\n            const otherDoctors = doctors.filter(d => d.id !== doctor.id);\r\n            if (otherDoctors.length === doctors.length) {\r\n                const maxId = otherDoctors.reduce((acc, d) => acc > d.id ? acc : d.id, 0);\r\n                doctor.id = maxId + 1;\r\n            }\r\n            const result = [...otherDoctors, doctor];\r\n            localStorage.setItem(LocalStorage.DOCTORS, JSON.stringify(result));\r\n            return result;\r\n        });\r\n    }, []);\r\n\r\n    const deleteDoctor = React.useCallback(id => {\r\n        //работает, но не обновляет стейт, как результат если удалить всех врачей вместе с их деталями посещений\r\n        //а потом добавить новых и такими же id, то при открытии их карточек там отобразятся старые детали по старым врачам\r\n        //вероятно потому что хоть в localStorage мы данные и заменили, но стейт мы не обновляли\r\n        const visitsStr = localStorage.getItem(LocalStorage.DETAILS);\r\n        const visits = JSON.parse(visitsStr) || {};\r\n        const newVisits = Object.assign(visits);\r\n        delete newVisits[id];\r\n\r\n        setDoctors(doctors => {\r\n            const result = doctors.filter(d => d.id !== id);\r\n            localStorage.setItem(LocalStorage.DOCTORS, JSON.stringify(result));\r\n            localStorage.setItem(LocalStorage.DETAILS, JSON.stringify(newVisits))\r\n            return result;\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        const fn = async () => {\r\n            await delay(getDoctors, 1000);\r\n            window.addEventListener('storage', getDoctors)\r\n        }\r\n        fn();\r\n        return () => {\r\n            window.removeEventListener('storage', getDoctors)\r\n        }\r\n    }, [getDoctors])\r\n\r\n    return React.useMemo(\r\n        () => ({\r\n            doctors,\r\n            loading,\r\n            updateDoctor,\r\n            deleteDoctor,\r\n            setDoctors\r\n        }),\r\n        [doctors, loading, updateDoctor, deleteDoctor]\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport './DoctorForm.css';\r\nimport Fab from \"../Fab/Fab\";\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\n\r\n\r\nfunction validateDoctorForm(value, doctors) {\r\n    if (!value) {\r\n        return '*Обязательное поле';\r\n    }\r\n    const isDuplicate = doctors.some(doctor => doctor.value.toLowerCase() === value.toLowerCase());\r\n    if(isDuplicate){\r\n        return '*Ошибка! Такой врач уже существует';\r\n    }\r\n    const checkSpace = value.trim();\r\n    if(checkSpace === ''){\r\n        return '*Недопустимое название врача';\r\n    }\r\n    return '';\r\n}\r\n\r\nexport default function DoctorForm() {\r\n    const { doctors, updateDoctor } =useDoctorsContext();\r\n    const navigate = useNavigate();\r\n    const [message, setMessage] = React.useState('');\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = React.useCallback((e) => {\r\n        setValue(e.target.value);\r\n        setMessage('');\r\n    }, []);\r\n    const handleSubmit = React.useCallback((e) => {\r\n        // todo move to hook\r\n        e.preventDefault();\r\n        const message = validateDoctorForm(value, doctors);\r\n        if (message) {\r\n            setMessage(message);\r\n            return;\r\n        }\r\n        updateDoctor({ value });\r\n        navigate(AppRoutes.DOCTORS);\r\n        }, [value, navigate, updateDoctor, doctors]);\r\n    return (\r\n        <div className=\"doctorForm\">\r\n            <form className='doctorForm__form' onSubmit={handleSubmit}>\r\n                <input\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className='doctorForm__input'\r\n                    placeholder=\"Введите врача\"\r\n                    name=\"doctorName\"\r\n                    autoFocus={true}\r\n                />\r\n                <div className='doctorForm__message'>\r\n                    {message}\r\n                </div>\r\n                <button className='doctorForm__saveButton' type=\"submit\">\r\n                    Сохранить\r\n                </button>\r\n                <div className='doctorForm__back'>\r\n                    <Link to={AppRoutes.DOCTORS}>\r\n                        <Fab color=\"primary\"  className='back__fab'>\r\n                            🠔\r\n                        </Fab>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","var _polyline, _path, _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTrash2(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-trash-2\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _polyline || (_polyline = /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 10,\n    y1: 11,\n    x2: 10,\n    y2: 17\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 14,\n    y1: 11,\n    x2: 14,\n    y2: 17\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash2);\nexport default __webpack_public_path__ + \"static/media/trash-2.bba7f8a9.svg\";\nexport { ForwardRef as ReactComponent };","import './Card.css';\r\nimport React from \"react\";\r\nimport {ReactComponent as TrashBin} from \"../../../icons/trash-2.svg\";\r\n\r\n\r\n/**\r\n * плашка с 1 посещением\r\n */\r\nexport default function Card({visit, onDelete}) {\r\n    const {\r\n        receiptDate,\r\n        doctorName,\r\n        clinicName,\r\n        analyzes,\r\n        diagnosis,\r\n        treatment,\r\n        addressClinic,\r\n    } = visit;\r\n\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"card__value\">\r\n                <h4 className=\"value__title\"> Дата приёма:</h4>\r\n                <p className=\"value__text\">{receiptDate}</p>\r\n                <h4 className=\"value__title\"> ФИО врача:</h4>\r\n                <p className=\"value__text\">{doctorName}</p>\r\n                <h4 className=\"value__title\"> Адрес клиники:</h4>\r\n                <p className=\"value__text\"> {addressClinic}</p>\r\n                <h4 className=\"value__title\"> Наименование клиники:</h4>\r\n                <p className=\"value__text\">{clinicName}</p>\r\n                <h4 className=\"value__title\"> Анализы:</h4>\r\n                <p className=\"value__text\">{analyzes}</p>\r\n                <h4 className=\"value__title\"> Диагноз:</h4>\r\n                <p className=\"value__text\">{diagnosis}</p>\r\n                <h4 className=\"value__title\"> Лечение:</h4>\r\n                <p className=\"value__text\">{treatment}</p>\r\n            </div>\r\n\r\n            <div\r\n                className='card__delete'\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onDelete(visit.id)\r\n                }}\r\n            >\r\n                <TrashBin className={'delete__icon'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import './SummaryCards.css';\r\nimport React from \"react\";\r\nimport Fab from \"../Fab/Fab\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {Card} from \"./Card\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport {useDoctorData} from \"../../hooks/useDoctorData\";\r\nimport {useVisitsByDoctor} from \"../../hooks/useVisit\";\r\nimport {useVisitsContext} from \"../../contexts/VisitsContext\";\r\n\r\nexport default function SummaryCards() {\r\n    const { id } = useParams();\r\n    const doctorVisits = useVisitsByDoctor(id);\r\n    const doctor = useDoctorData();\r\n    const { updateVisitsByOneDoctor } = useVisitsContext();\r\n\r\n    const onDeleteHandle = React.useCallback((visitId) => {\r\n        const newVisitsByOneDoctor = doctorVisits.filter(visit => visit.id !== visitId);\r\n        updateVisitsByOneDoctor(id, newVisitsByOneDoctor);\r\n\r\n    }, [doctorVisits, updateVisitsByOneDoctor, id]);\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className= 'SummaryCards'>\r\n                <div className= 'SummaryCards__header'>\r\n                    {doctor?.value.toUpperCase()}\r\n                </div>\r\n                <div className= 'SummaryCards__cards'>\r\n\r\n                    {doctorVisits.map(visit => (\r\n                        <Card\r\n                            key={visit.id}\r\n                            visit={visit}\r\n                            onDelete={onDeleteHandle}\r\n                        />\r\n                    ))}\r\n\r\n                </div>\r\n                <div className= 'SummaryCards__fab'>\r\n\r\n                    <Link to={AppRoutes.DOCTORS}>\r\n                        <Fab color=\"primary\" aria-label=\"add\" className='fab__back'>\r\n                            🠔\r\n                        </Fab>\r\n                    </Link>\r\n                    <Link to={AppRoutes.DOCTOR_VISIT_FORM.replace(':id', doctor.id)} className='fab__add'>\r\n                        <Fab color=\"primary\" aria-label=\"add\">\r\n                            +\r\n                        </Fab>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {useVisitsContext} from \"../contexts/VisitsContext\";\r\nimport {useMemo} from \"react\";\r\n\r\n\r\nexport function useVisitsByDoctor(id) {\r\n    const { visitsByAllDoctors } = useVisitsContext();\r\n    return useMemo(() => visitsByAllDoctors[id] || [], [id, visitsByAllDoctors]);\r\n}\r\n\r\n\r\n","import {useMemo} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDoctorsContext} from \"../contexts/DoctorsContext\";\r\n\r\nexport function useDoctorData() {\r\n    const { id } = useParams();\r\n    const {doctors} = useDoctorsContext();\r\n    return useMemo(() => doctors.find(d => d.id === +id), [id, doctors]);\r\n}\r\n","import {useNavigate} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\n\r\n/**\r\n * как перейти на эту страницу?\r\n * при указани несуществующего адреса сначала появилась welcomePage на пару секунд, а следом основная с докторами\r\n * @returns {JSX.Element}\r\n * @constructor\r\n */\r\nexport default function NotFoundPage() {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        navigate(AppRoutes.DOCTORS)\r\n    }, [navigate])\r\n    return (\r\n        <main style={{ padding: \"1rem\" }}>\r\n            <p>There's nothing here!</p>\r\n        </main>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {ReactComponent as TrashBin} from \"../../../icons/trash-2.svg\";\r\nimport './DoctorItem.css';\r\n\r\n\r\nexport default function DoctorItem({doctor, onClick, onDelete}) {\r\n\r\n    // todo change 'wrapper' class name\r\n    return (\r\n        <div className='wrapper'>\r\n            <div\r\n                className='doctorItem'\r\n                onClick={() => onClick(doctor.id)}\r\n            >\r\n                <div className='doctorItem__value'>\r\n                    {doctor.value}\r\n                </div>\r\n                <div\r\n                    className='doctorItem__delete'\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setTimeout(onDelete(doctor.id), 5000);\r\n                    }}\r\n                >\r\n                    <TrashBin className={'delete__icon'}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useCallback} from \"react\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\nimport {useVisitsContext} from \"../../contexts/VisitsContext\";\r\nimport {AppRoutes} from \"../App/constants/routes\";\r\nimport {DoctorItem} from \"./DoctorItem\";\r\nimport Fab from \"../Fab/Fab\";\r\nimport './Doctors.css'\r\n\r\n\r\nexport default function Doctors() {\r\n    const {doctors, deleteDoctor} = useDoctorsContext();\r\n    const {deleteVisitsByDoctorId} = useVisitsContext();\r\n    const handleDeleteDoctor = useCallback((id) => {\r\n        deleteDoctor(id);\r\n        deleteVisitsByDoctorId(id)\r\n    }, [deleteVisitsByDoctorId, deleteDoctor])\r\n    const navigate = useNavigate();\r\n    const onClickHandle = React.useCallback((id) =>\r\n            navigate(AppRoutes.DOCTOR.replace(':id', id)),\r\n        [navigate]\r\n    );\r\n\r\n    if (!doctors.length) {\r\n        return (\r\n            <div className=\"welcomePage\">\r\n                    <div className=\"welcomePage__welcome\"> Добрый день! <br/> Вам необходимо добавить врачей</div>\r\n                <div className='welcomePage__fab'>\r\n                    <Link to={AppRoutes.DOCTOR_FORM}>\r\n                        <Fab color=\"primary\" aria-label=\"add\">\r\n                            +\r\n                        </Fab>\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n    return (\r\n        <div className=\"doctors\">\r\n            <div className=\"doctors__wrapper\">\r\n                <div className={'list__title'}> Общий список врачей</div>\r\n                <TransitionGroup\r\n                    component={'div'}\r\n                    className=\"doctors__list\"\r\n                >\r\n                    {doctors.map(doctor => (\r\n                        <CSSTransition\r\n                            key={doctor.id}\r\n                            timeout={500}\r\n                            classNames=\"list__doctor\"\r\n                        >\r\n                            <DoctorItem\r\n                                key={doctor.value}\r\n                                onClick={onClickHandle}\r\n                                doctor={doctor}\r\n                                onDelete={handleDeleteDoctor}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n                <div className='doctors__fab'>\r\n                    <Link to={AppRoutes.DOCTOR_FORM}>\r\n                        <Fab color=\"primary\" aria-label=\"add\">\r\n                            +\r\n                        </Fab>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDoctorsContext} from \"../../contexts/DoctorsContext\";\r\nimport {useVisitsContext} from \"../../contexts/VisitsContext\";\r\nimport './LoadingWrapper.css'\r\n\r\n\r\nfunction LoadingWrapper({children}) {\r\n    const {loading: visitLoading} = useVisitsContext();\r\n    const {loading: doctorsLoading} = useDoctorsContext();\r\n    if (doctorsLoading || visitLoading) {\r\n        return (\r\n            <div className={'loading__wrapper'}>\r\n                <div className='loading__outside'>\r\n                    <div className=\"loading__inside\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return children;\r\n}\r\n\r\nexport default LoadingWrapper;","import React from \"react\";\r\nimport { Routes, Route, HashRouter} from \"react-router-dom\";\r\nimport {VisitDetailsForm} from \"../VisitDetailsForm\";\r\nimport {DoctorForm} from \"../DoctorForm\";\r\nimport {AppRoutes} from \"./constants/routes\";\r\nimport {SummaryCards} from \"../SummaryCards\";\r\nimport './App.css';\r\nimport {NotFoundPage} from \"../NotFoundPage\";\r\nimport {Doctors} from \"../Doctors\";\r\nimport {DoctorsContextProvider} from \"../../contexts/DoctorsContext\";\r\nimport {LoadingWrapper} from \"../LoadingWrapper\";\r\nimport {VisitsContextProvider} from \"../../contexts/VisitsContext\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <DoctorsContextProvider>\r\n                    <VisitsContextProvider>\r\n                        <LoadingWrapper>\r\n                            <Routes>\r\n                                <Route exact path={AppRoutes.DOCTOR_VISIT_FORM} element={<VisitDetailsForm/>}/>\r\n                                <Route exact path={AppRoutes.DOCTOR} element={<SummaryCards/>}/>\r\n                                <Route exact path={AppRoutes.DOCTOR_FORM} element={<DoctorForm/>}/>\r\n                                <Route exact path={AppRoutes.DOCTORS} element={<Doctors/>}/>\r\n                                <Route path=\"*\" element={<NotFoundPage/>}/>\r\n                            </Routes>\r\n                        </LoadingWrapper>\r\n                    </VisitsContextProvider>\r\n                </DoctorsContextProvider>\r\n\r\n            </HashRouter>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}